name: Publish packages

on:
  release:
    types: [published]

permissions:
  contents: write
  id-token: write
  attestations: write


jobs:

  set-version:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Export tag
        id: vars
        run: echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT
      - name: Update project version
        run: |
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      - name: Upload updated pyproject.toml
        uses: actions/upload-artifact@v4
        with:
          name: pyproject-toml
          path: pyproject.toml

  build_sdist:
    name: Build source dist
    runs-on: ubuntu-latest
    needs: [set-version]
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Set up tree-sitter CLI
        uses: tree-sitter/setup-action/cli@v2
      - name: Install dependencies
        run: |-
          JQ_SCRIPT='.dependencies | del(."node-addon-api", ."node-gyp-build") | length > 0'
          if jq -e "$JQ_SCRIPT" package.json >/dev/null; then
            npm i --ignore-scripts --omit dev --omit peer --omit optional
          fi
      - name: Regenerate parser
        shell: bash
        run: |
          while read -r grammar; do
            grammar_dir=$(dirname "$grammar")
            cd "$grammar_dir"
            tree-sitter generate
            cd - > /dev/null
          done < <(find . -name grammar.js -not -path './node_modules/*' -not -path './.build/*')
      - name: Install dependencies
        run: pip install --upgrade pip build setuptools wheel
      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml
      - name: Build sources
        run: python -mbuild -n -s
      - name: Upload sources
        uses: actions/upload-artifact@v4
        with:
          name: dist-sources
          path: dist/*.tar.gz
          retention-days: 2

  build_wheels:
    name: Build wheels on ${{matrix.os}} (${{matrix.cibw_arch}})
    runs-on: ${{matrix.os}}
    needs: [set-version]
    strategy:
      matrix:
        include:
          - { os: windows-latest, cibw_arch: AMD64 }
          - { os: windows-latest, cibw_arch: ARM64 }
          - { os: ubuntu-latest,  cibw_arch: x86_64 }
          - { os: ubuntu-latest,  cibw_arch: aarch64, qemu_arch: arm64 }
          - { os: macos-latest,   cibw_arch: arm64 }
          - { os: macos-latest,   cibw_arch: x86_64 }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        if: matrix.qemu_arch != ''
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{matrix.qemu_arch}}
      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23
        with:
          output-dir: dist
        env:
          CIBW_ARCHS: ${{matrix.cibw_arch}}
          CIBW_SKIP: "*-musllinux_aarch64"
          CIBW_TEST_SKIP: "*-*linux_aarch64 *-macosx_x86_64 *-win_arm64"
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.whl
          name: dist-wheels-${{matrix.os}}-${{matrix.cibw_arch}}
          retention-days: 2

  package:
    name: Publish Python package
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/tree-sitter-rql/
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: dist-*
          merge-multiple: true
      - name: Check build artifacts
        run: ls -l dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/
